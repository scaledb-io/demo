services:
  db:
    image: percona:8.0
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: test_db
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_password
    command: --server-id=1
      --log-bin=mysql-bin
      --max-binlog-size=4096
      --binlog-format=ROW
      --sync-binlog=1
      --log-slave-updates=ON
      --gtid-mode=ON
      --enforce-gtid-consistency=ON
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --max-connections=1000
      --read-only=OFF
      --binlog-rows-query-log-events=ON
    healthcheck:
      test: "mysqladmin ping -h127.0.0.1 -P3306 -uroot -proot_password"
      interval: 1s
      timeout: 1s
      retries: 10
    stop_grace_period: 30s
    volumes:
      - db-data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306:3306"
    networks:
      - mysql-network

  readyset:
    image: readysettech/readyset:latest
    container_name: readyset
    ports:
      - "3307:3307" # ReadySet client port
      - "6034:6034" # Prometheus exporter
    environment:
      RS_API_KEY: ${RS_API_KEY-""}
      DEPLOYMENT_ENV: quickstart_docker
      STORAGE_DIR: /state
      PROMETHEUS_METRICS: true
      QUERY_LOG_MODE: verbose
      QUERY_CACHING: explicit
      DEPLOYMENT: docker_compose_deployment
      LISTEN_ADDRESS: 0.0.0.0:3307
      ALLOW_UNAUTHENTICATED_CONNECTIONS: true
      UPSTREAM_DB_URL: mysql://root:root_password@db:3306/test_db
      CONTROLLER_ADDRESS: 0.0.0.0
    volumes:
      - "readyset-data:/state"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "127.0.0.1:6034/health" ]
      interval: 2s
      timeout: 1s
      retries: 5
      start_period: 5s
    networks:
      - mysql-network
    depends_on:
      db:
        condition: service_healthy

  prometheus:
    image: public.ecr.aws/readyset/readyset-prometheus:latest
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9090"]
      interval: 5s
      timeout: 5s
      retries: 12
    networks:
      - mysql-network
    expose:
      - 9090
    volumes:
      - "prometheus-data:/prometheus"

  pushgateway:
    image: prom/pushgateway
    networks:
      - mysql-network
    expose:
      - 9091

  grafana:
    image: public.ecr.aws/readyset/readyset-grafana:latest
    ports:
      - "4000:4000"
    environment:
      UPSTREAM_DB_URL: mysql://root:root_password@db:3306/test_db
      RS_HOST: readyset
      RS_PORT: 3307
      RS_GRAFANA_PORT: 4000
    networks:
      - mysql-network

  proxysql:
    image: proxysql/proxysql:2.7.1
    container_name: proxysql
    volumes:
      - ./proxysql.cnf:/etc/proxysql.cnf
      - proxysql-data:/var/lib/proxysql
    ports:
      - "6032:6032"  # ProxySQL admin port
      - "6033:6033"  # ProxySQL client port
      - "6080:6080"  # ProxySQL web-admin
    networks:
      - mysql-network
    depends_on:
      - db
      - readyset

volumes:
  db-data:
  readyset-data:
  proxysql-data:
  prometheus-data:

networks:
  mysql-network:
    driver: bridge

